{"version":3,"sources":["components/App/App.js","components/Button/Button.js","components/FilterBar/FilterBar.js","components/Login/Login.js","components/Menu/Menu.js","components/Post/CommentBox.js","components/Post/Post.js","components/PostForm/PostForm.js","index.js"],"names":["App","useState","token","setToken","username","setUsername","className","Button","button","filters","setFilters","resetFilters","useCycle","states","buttonState","cycleButtonState","isOn","setIsOn","useEffect","div","layout","onClick","prev","filter","transition","ease","buttons","FilterBar","posts","setFilteredPosts","initialFilters","useMemo","viewAll","usersPosts","published","useCallback","filtered","post","author","userPosts","dateAdded","sort","a","b","timeCreated","map","i","key","Login","email","setEmail","password","setPassword","error","setError","onSubmit","e","preventDefault","console","log","process","fetch","method","body","JSON","stringify","headers","then","res","json","result","message","type","name","value","onChange","target","Menu","setPosts","filteredPosts","isLoaded","setIsLoaded","errors","setErrors","setMessage","formActive","setFormActive","Authorization","handleResult","err","msg","getPosts","updatePost","updates","newPost","_id","deletePost","deleteComment","id","length","exitForm","action","CommentBox","comments","exit","content","Post","title","commentBox","setCommentBox","slice","timeLastEdited","bind","updatedPost","PostForm","data","setData","handleSubmit","rows","checked","comment","count","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c124395.chunk.js","sourcesContent":["import { useState } from 'react';\nimport './App.scss';\n\nimport { Menu, Login } from '../index';\n\n// const devToken =\n//   'ZeyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhZG1pbiI6dHJ1ZSwiZGF0ZUNyZWF0ZWQiOiIyMDIwLTEyLTEzVDE3OjI5OjIyLjY0MFoiLCJfaWQiOiI1ZmQ2NGY5MjBmODYyMzIyMGM2OGUwOWIiLCJlbWFpbCI6Im5tQHlhaG9vLmNhIiwicGFzc3dvcmQiOiIkMmEkMTAkdU1ybVMvNE1LeDI0QWJSYTZSd3EzdTJMaHJqOG9HL296QlhwV2tPemRSR3MxbmQyU2pFamEiLCJ1c2VybmFtZSI6Im5tIiwiX192IjowLCJpYXQiOjE2MDk1MzU0MTcsImV4cCI6MTYwOTYyMTgxN30.xpF7ERiS1lRaXMQW94AiC12zb9erTaSLjaU_aLbNf44';\n// const devUsername = 'nm';\n\nconst App = () => {\n  const [token, setToken] = useState(null);\n  const [username, setUsername] = useState('');\n\n  return (\n    <div>\n      <h1>Blogger Home</h1>\n      <div className=\"app\">\n        {token ? (\n          <Menu {...{ token }} {...{ username }} />\n        ) : (\n          <Login {...{ setToken }} {...{ setUsername }} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { motion, useCycle } from 'framer-motion';\nimport { useEffect, useState } from 'react';\n\nimport './Button.scss';\n\nconst Button = ({ button, filters, setFilters, resetFilters }) => {\n  const [buttonState, cycleButtonState] = useCycle(...button.states);\n  const [isOn, setIsOn] = useState(false);\n\n  const handleClick = () => {\n    setIsOn(!isOn);\n    cycleButtonState();\n    setFilters((prev) => {\n      return { ...prev, [button.filter]: !filters[button.filter] };\n    });\n  };\n\n  useEffect(() => {\n    if (buttonState === 'View All') {\n      resetFilters();\n    }\n  }, [buttonState, resetFilters]);\n\n  return (\n    <motion.div\n      layout\n      className={`switch ${isOn ? 'on' : 'off'}`}\n      onClick={handleClick}\n    >\n      <motion.button layout transition={{ ease: 'easeOut' }}></motion.button>\n      <motion.div\n        layout\n        transition={{ ease: 'easeOut' }}\n        className=\"toggle-text\"\n      >\n        {buttonState}\n      </motion.div>\n    </motion.div>\n  );\n};\n\nexport default Button;\n","import { useCallback, useEffect, useMemo, useState } from 'react';\n\nimport { Button } from '../index';\nimport './FilterBar.scss';\n\nconst buttons = [\n  {\n    states: ['View All', 'Hide'],\n    filter: 'viewAll',\n  },\n  {\n    states: ['Yours', 'Others'],\n    filter: 'usersPosts',\n  },\n  {\n    states: ['Unublished', 'Published'],\n    filter: 'published',\n  },\n  {\n    states: ['Newest', 'Oldest'],\n    filter: 'dateAdded',\n  },\n];\n\nconst FilterBar = ({ posts, setFilteredPosts, username }) => {\n  const initialFilters = useMemo(\n    () => ({\n      viewAll: true,\n      usersPosts: null,\n      published: null,\n    }),\n    []\n  );\n\n  const [filters, setFilters] = useState(initialFilters);\n\n  const resetFilters = useCallback(() => setFilters(initialFilters), [\n    initialFilters,\n  ]);\n\n  useEffect(() => {\n    let filtered = [...posts];\n\n    if (!filters || filters.viewAll === false) {\n      filtered = [];\n    } else {\n      if (filters.usersPosts === true) {\n        filtered = filtered.filter((post) => post.author === username);\n      } else if (filters.userPosts === false) {\n        filtered = filtered.filter((post) => post.author !== username);\n      }\n\n      if (filters.published === true) {\n        filtered = filtered.filter((post) => post.published);\n      } else if (filters.published === false) {\n        filtered = filtered.filter((post) => !post.published);\n      }\n\n      if (filters.dateAdded === true) {\n        filtered = filtered.sort((a, b) =>\n          a.timeCreated > b.timeCreated ? 1 : -1\n        );\n      } else if (filters.dateAdded === false) {\n        filtered = filtered.sort((a, b) =>\n          a.timeCreated < b.timeCreated ? 1 : -1\n        );\n      }\n    }\n\n    setFilteredPosts(filtered);\n  }, [setFilters, posts, username, filters, setFilteredPosts]);\n\n  return (\n    <div className=\"filter-bar\">\n      {buttons.map((button, i) => (\n        <Button\n          {...{ button }}\n          {...{ resetFilters }}\n          {...{ setFilters }}\n          {...{ filters }}\n          key={i}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default FilterBar;\n","import { useState } from 'react';\nimport './Login.scss';\n\nconst Login = ({ setToken, setUsername }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n\n  const checkCredentials = (e) => {\n    e.preventDefault();\n    console.log(`checking post to ${process.env.REACT_APP_BE_URL}`);\n\n    fetch(process.env.REACT_APP_BE_URL + '/users/login', {\n      method: 'POST',\n      body: JSON.stringify({ email, password }),\n      headers: {\n        'content-type': 'application/json',\n      },\n    })\n      .then((res) => res.json())\n      .then((result) => {\n        if (result.token) {\n          setToken(result.token);\n          setUsername(result.username);\n        }\n        if (result.message) {\n          setError(result.message.message);\n        }\n      });\n  };\n\n  return (\n    <form className=\"login-form\" onSubmit={checkCredentials}>\n      <h2 className=\"form-title\">Login</h2>\n      {error && <div className=\"error\">- {error}</div>}\n      <label>\n        Email:\n        <input\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </label>\n      <label>\n        Password:\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </label>\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n};\n\nexport default Login;\n","import { useEffect, useState } from 'react';\n\nimport { Post, PostForm, FilterBar } from '../index';\nimport './Menu.scss';\n\nconst Menu = ({ token, username }) => {\n  const [posts, setPosts] = useState([]);\n  const [filteredPosts, setFilteredPosts] = useState(posts);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [errors, setErrors] = useState([]);\n  const [message, setMessage] = useState(null);\n  const [formActive, setFormActive] = useState(false);\n\n  const headers = {\n    Authorization: `Bearer ${token}`,\n    'content-type': 'application/json',\n  };\n\n  const handleResult = (result) => {\n    setMessage(result?.message);\n    setErrors(\n      result?.errors\n        ? result.errors.map((err) => err.msg)\n        : result?.err\n        ? [result.err]\n        : []\n    );\n    getPosts();\n  };\n\n  const newPost = (post) => {\n    fetch(`${process.env.REACT_APP_BE_URL}/posts/`, {\n      method: 'POST',\n      body: JSON.stringify(post),\n      headers,\n    })\n      .then((res) => res.json())\n      .then((result) => handleResult(result));\n  };\n\n  const updatePost = (post, updates) => {\n    const newPost = JSON.stringify({ ...post, ...updates });\n    fetch(`${process.env.REACT_APP_BE_URL}/posts/${post._id}`, {\n      method: 'PUT',\n      body: newPost,\n      headers,\n    })\n      .then((res) => res.json())\n      .then((result) => handleResult(result));\n  };\n\n  const deletePost = (post) => {\n    fetch(`${process.env.REACT_APP_BE_URL}/posts/${post._id}`, {\n      method: 'DELETE',\n      headers,\n    })\n      .then((res) => res.json())\n      .then((result) => handleResult(result));\n  };\n\n  const deleteComment = (id, post) => {\n    fetch(`${process.env.REACT_APP_BE_URL}/posts/${post._id}/${id}`, {\n      method: 'DELETE',\n      headers,\n    })\n      .then((res) => res.json())\n      .then((result) => handleResult(result));\n  };\n\n  const getPosts = () => {\n    fetch(`${process.env.REACT_APP_BE_URL}/posts`)\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setPosts(\n            result.posts.sort((a, b) =>\n              a.timeCreated > b.timeCreated ? -1 : 1\n            )\n          );\n          setIsLoaded(true);\n        },\n        (error) => {\n          setErrors([error]);\n          setIsLoaded(true);\n        }\n      );\n  };\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  if (!isLoaded) {\n    return <div className=\"loading\">Loading...</div>;\n  } else {\n    return (\n      <div className=\"container\">\n        <div className=\"message-container\">\n          {errors?.length > 0 && (\n            <div className=\"errors\">\n              <h4 className=\"err-title\">Errors: </h4>\n              {errors.map((error, i) => (\n                <div key={i}>- {error}</div>\n              ))}\n              <div className=\"ok-btn\">\n                <button onClick={() => setErrors([])}>OK</button>\n              </div>\n            </div>\n          )}\n          {message?.length > 0 && (\n            <div className=\"message\">\n              {message}\n              <div className=\"ok-btn\">\n                <button onClick={() => setMessage(null)}>OK</button>\n              </div>\n            </div>\n          )}\n        </div>\n\n        <div className=\"head-bar\">\n          <button className=\"new-btn\" onClick={() => setFormActive(true)}>\n            New Post\n          </button>\n          <FilterBar\n            {...{ setFilteredPosts }}\n            {...{ posts }}\n            {...{ username }}\n          />\n        </div>\n\n        <div className=\"posts-container\">\n          {filteredPosts.map((post) => (\n            <Post\n              {...{ post }}\n              {...{ headers }}\n              {...{ updatePost }}\n              {...{ getPosts }}\n              {...{ deletePost }}\n              {...{ deleteComment }}\n              key={post._id}\n            />\n          ))}\n        </div>\n\n        {formActive && (\n          <PostForm\n            exitForm={() => setFormActive(false)}\n            action={newPost}\n            {...{ headers }}\n          />\n        )}\n      </div>\n    );\n  }\n};\n\nexport default Menu;\n","const CommentBox = ({ comments, exit, deleteComment }) => {\n  return (\n    <div className=\"comment-box\">\n      <div className=\"exit-btn\" onClick={() => exit()}>\n        x\n      </div>\n      {comments.map(\n        ({ content, timeCreated, author: { username }, post, _id }, i) => (\n          <div className=\"comment\" key={i}>\n            <button\n              className=\"delete-btn\"\n              onClick={() => deleteComment(_id, post)}\n            >\n              DEL\n            </button>\n            <div className=\"comment-content\">{content}</div>\n            <div className=\"secondary-bar footer\">\n              <div className=\"author\">By: {username}</div>\n              <div className=\"dates\">Posted {timeCreated}</div>\n            </div>\n          </div>\n        )\n      )}\n    </div>\n  );\n};\n\nexport default CommentBox;\n","import { useState } from 'react';\nimport { PostForm } from '../index';\nimport CommentBox from './CommentBox';\nimport './Post.scss';\n\nconst Post = ({\n  post,\n  post: { title, content, author, comments, published },\n  updatePost,\n  deletePost,\n  deleteComment,\n}) => {\n  const [formActive, setFormActive] = useState(false);\n  const [commentBox, setCommentBox] = useState(false);\n  const update = (updatedPost) => updatePost(post, updatedPost);\n\n  return (\n    <div className=\"post-tile\">\n      <h2 className=\"title\" onClick={() => setFormActive(true)}>\n        {title}\n      </h2>\n      <h3 className=\"author\">By {author.username}</h3>\n      <p className=\"content-short\">{content.slice(0, 50)}...</p>\n      <div className=\"secondary-bar\">\n        <div className=\"published\">\n          {published ? 'Published' : 'Unpublished'}\n        </div>\n        <div className=\"comments\" onClick={() => setCommentBox(true)}>\n          Comments ({comments?.length || 0})\n        </div>\n      </div>\n      <div className=\"dates secondary-bar\">\n        <div>Added: {post.timeCreated?.slice(0, 10)}</div>\n        <div>Last Edited: {post.timeLastEdited?.slice(0, 10)}</div>\n      </div>\n\n      {commentBox && (\n        <CommentBox\n          {...{ comments }}\n          exit={setCommentBox.bind(false)}\n          {...{ deleteComment }}\n        />\n      )}\n\n      {formActive && (\n        <PostForm\n          post={post}\n          exitForm={setFormActive.bind(false)}\n          {...{ deletePost }}\n          action={update}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Post;\n","import { useState } from 'react';\nimport './PostForm.scss';\n\nconst PostForm = ({ post = null, exitForm, action, deletePost }) => {\n  const [data, setData] = useState({\n    title: post?.title || '',\n    content: post?.content || '',\n    published: post?.published || false,\n  });\n\n  const handleSubmit = async () => {\n    await action(data);\n    exitForm();\n  };\n\n  return (\n    <form className=\"post-form\" onSubmit={handleSubmit}>\n      <button type=\"button\" className=\"exit-btn\" onClick={() => exitForm()}>\n        x\n      </button>\n      <label>\n        Title\n        <input\n          type=\"text\"\n          name=\"title\"\n          value={data.title}\n          onChange={(e) => setData({ ...data, title: e.target.value })}\n        />\n      </label>\n      <label>\n        Content\n        <textarea\n          rows={5}\n          name=\"content\"\n          value={data.content}\n          onChange={(e) => setData({ ...data, content: e.target.value })}\n        />\n      </label>\n      <label className=\"published\">\n        Published\n        <input\n          type=\"checkbox\"\n          name=\"published\"\n          checked={data.published}\n          onChange={(e) => setData({ ...data, published: e.target.checked })}\n        />\n      </label>\n\n      <div className=\"buttons-footer\">\n        <button type=\"submit\" className=\"save\">\n          Save\n        </button>\n        {post?._id && (\n          <button\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => deletePost(post)}\n          >\n            Delete\n          </button>\n        )}\n      </div>\n\n      {post?._id && (\n        <div className=\"update-post-footer\">\n          <div>Comments: ({post.comment?.count})</div>\n          <div className=\"dates secondary-bar\">\n            <div>Added: {post.timeCreated?.slice(0, 10)}</div>\n            <div>Last Edited: {post.timeLastEdited?.slice(0, 10)}</div>\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default PostForm;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './components/index';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}